{"version":3,"sources":["webpack:///./node_modules/rxjs-compat/_esm5/add/observable/from.js","webpack:///./src/app/core/entity/model/description.model.ts","webpack:///./src/app/core/entity/model/tasklet.model.ts","webpack:///./src/app/ui/suggested-action-button/suggested-action-button.module.ts","webpack:///./src/app/ui/suggested-action-button/suggested-action-button/suggested-action-button.component.html","webpack:///./src/app/ui/suggested-action-button/suggested-action-button/suggested-action-button.component.scss","webpack:///./src/app/ui/suggested-action-button/suggested-action-button/suggested-action-button.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAsD;AACtD,+CAAU,QAAQ,yCAAU;AAC5B,gC;;;;;;;;;;;;ACFA;AAAA;AAAA;;GAEG;AACH;IAKE;;OAEG;IACH;QACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IACH,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACd+C;AACF;AACR;AACU;AAIhD;;GAEG;AACH;IAA6B,2BAAM;IA+BjC;;OAEG;IACH;QAAA,YACE,iBAAO,SAaR;QAZC,KAAI,CAAC,UAAU,GAAG,4DAAU,CAAC,OAAO,CAAC;QACrC,KAAI,CAAC,IAAI,GAAG,8DAAW,CAAC,WAAW,CAAC;QACpC,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,KAAI,CAAC,WAAW,GAAG,IAAI,8DAAW,EAAE,CAAC;QACrC,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAEpB,KAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,KAAI,CAAC,YAAY,GAAG,IAAI,8DAAW,EAAE,CAAC;QACtC,KAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;QAC3B,KAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;;IAC1B,CAAC;IACH,cAAC;AAAD,CAAC,CAjD4B,oDAAM,GAiDlC;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DsC;AACM;AAC8D;AAChD;AAiB3D;IAAA;IACA,CAAC;IADY,2BAA2B;QAfvC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,wEAAc;aACf;YACD,YAAY,EAAE;gBACZ,yHAA8B;aAC/B;YACD,eAAe,EAAE;gBACf,yHAA8B;aAC/B;YACD,OAAO,EAAE;gBACP,yHAA8B;aAC/B;SACF,CAAC;OACW,2BAA2B,CACvC;IAAD,kCAAC;CAAA;AADuC;;;;;;;;;;;;ACpBxC,iVAAiV,SAAS,yB;;;;;;;;;;;ACA1V,4sBAA4sB,qBAAqB,iBAAiB,qBAAqB,uBAAuB,4BAA4B,wBAAwB,EAAE,QAAQ,mBAAmB,wBAAwB,EAAE,UAAU,mBAAmB,qBAAqB,sBAAsB,4BAA4B,wBAAwB,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACAn9B;AAErE;;GAEG;AAMH;IALA;QAgBE,+CAA+C;QACrC,yBAAoB,GAAG,IAAI,0DAAY,EAAO,CAAC;IAY3D,CAAC;IAVC,EAAE;IACF,UAAU;IACV,EAAE;IAEF;;OAEG;IACH,wDAAe,GAAf;QACE,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;IACnC,CAAC;IApBQ;QAAR,2DAAK,EAAE;;2EAAyB;IAExB;QAAR,2DAAK,EAAE;;qEAAmB;IAElB;QAAR,2DAAK,EAAE;;gEAAc;IAEb;QAAR,2DAAK,EAAE;;iEAAe;IAGb;QAAT,4DAAM,EAAE;;gFAAgD;IAZ9C,8BAA8B;QAL1C,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;;;SAGxC,CAAC;OACW,8BAA8B,CAwB1C;IAAD,qCAAC;CAAA;AAxB0C","file":"common.js","sourcesContent":["import { Observable, from as staticFrom } from 'rxjs';\nObservable.from = staticFrom;\n//# sourceMappingURL=from.js.map","/**\r\n * Represents a description which is the main part of a tasklet\r\n */\r\nexport class Description {\r\n\r\n  /** Text of the description */\r\n  value: string;\r\n\r\n  /**\r\n   * Constructor\r\n   */\r\n  constructor() {\r\n    this.value = '';\r\n  }\r\n}\r\n","import {TaskletType} from './tasklet-type.enum';\r\nimport {EntityType} from './entity-type.enum';\r\nimport {Entity} from './entity.model';\r\nimport {Description} from './description.model';\r\nimport {MeetingMinuteItem} from './meeting-minutes/meeting-minute-item.model';\r\nimport {DailyScrumItem} from './daily-scrum/daily-scrum-item.model';\r\n\r\n/**\r\n * Represents a tasklet which is a fraction of a task\r\n */\r\nexport class Tasklet extends Entity {\r\n\r\n  /** Tasklet type */\r\n  type: TaskletType;\r\n  /** Reference to task */\r\n  taskId: string;\r\n  /** Description */\r\n  description: Description;\r\n\r\n  // Labels\r\n\r\n  /** References to tags */\r\n  tagIds: string[];\r\n  /** References to persons */\r\n  personIds: string[];\r\n\r\n  // Type specific aspects\r\n\r\n  /** Array of meeting minute items */\r\n  meetingMinuteItems: MeetingMinuteItem[];\r\n  /** Array of daily scrum items */\r\n  dailyScrumItems: DailyScrumItem[];\r\n  /** Pomodoro task */\r\n  pomodoroTask: Description;\r\n  /** Pomodoro duration */\r\n  pomodoroDuration: number;\r\n  /** Pomodoro break duration */\r\n  pomodoroBreak: number;\r\n  /** Pomodoro start time */\r\n  pomodoroStartTime: Date;\r\n\r\n  /**\r\n   * Constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.entityType = EntityType.TASKLET;\r\n    this.type = TaskletType.UNSPECIFIED;\r\n    this.taskId = '';\r\n    this.description = new Description();\r\n    this.tagIds = [];\r\n    this.personIds = [];\r\n\r\n    this.meetingMinuteItems = [];\r\n    this.dailyScrumItems = [];\r\n    this.pomodoroTask = new Description();\r\n    this.pomodoroDuration = -1;\r\n    this.pomodoroBreak = -1;\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SuggestedActionButtonComponent} from './suggested-action-button/suggested-action-button.component';\r\nimport {MaterialModule} from '../material/material.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule\r\n  ],\r\n  declarations: [\r\n    SuggestedActionButtonComponent\r\n  ],\r\n  entryComponents: [\r\n    SuggestedActionButtonComponent\r\n  ],\r\n  exports: [\r\n    SuggestedActionButtonComponent\r\n  ]\r\n})\r\nexport class SuggestedActionButtonModule {\r\n}\r\n","module.exports = \"<button mat-button class=\\\"container\\\" [disableRipple]=\\\"true\\\" (click)=\\\"onButtonClicked()\\\">\\r\\n  <button mat-fab class=\\\"fab\\\"\\r\\n          [style.backgroundColor]=backgroundColor>\\r\\n    <mat-icon [svgIcon]=icon [style.fill]=iconColor></mat-icon>\\r\\n  </button>\\r\\n  <span *ngIf=\\\"label != null\\\" class=\\\"label\\\">{{ label }}</span>\\r\\n</button>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.container {\\n  padding: 5px 5px;\\n  width: 100px;\\n  overflow: hidden;\\n  text-align: center;\\n  text-overflow: ellipsis;\\n  white-space: nowrap; }\\n.fab {\\n  display: block;\\n  margin: 0 auto 15px; }\\n.label {\\n  color: #616161;\\n  overflow: hidden;\\n  text-align: start;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  width: 100px; }\\n\"","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n/**\r\n * Displays round action button\r\n */\r\n@Component({\r\n  selector: 'app-suggested-action-button',\r\n  templateUrl: './suggested-action-button.component.html',\r\n  styleUrls: ['./suggested-action-button.component.scss']\r\n})\r\nexport class SuggestedActionButtonComponent {\r\n\r\n  /** Button color */\r\n  @Input() backgroundColor: string;\r\n  /** Icon color */\r\n  @Input() iconColor: string;\r\n  /** Name of button icon */\r\n  @Input() icon: string;\r\n  /** Button label */\r\n  @Input() label: string;\r\n\r\n  /** Event emitter indicating changes in date */\r\n  @Output() buttonClickedEmitter = new EventEmitter<any>();\r\n\r\n  //\r\n  // Actions\r\n  //\r\n\r\n  /**\r\n   * Handles click on button\r\n   */\r\n  onButtonClicked() {\r\n    this.buttonClickedEmitter.emit();\r\n  }\r\n}\r\n"],"sourceRoot":""}