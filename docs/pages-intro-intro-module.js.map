{"version":3,"sources":["webpack:///./src/app/pages/intro/components/feature-fragment/feature-fragment.component.html","webpack:///./src/app/pages/intro/components/feature-fragment/feature-fragment.component.scss","webpack:///./src/app/pages/intro/components/feature-fragment/feature-fragment.component.ts","webpack:///./src/app/pages/intro/intro-routing.module.ts","webpack:///./src/app/pages/intro/intro.module.ts","webpack:///./src/app/pages/intro/pages/intro/intro.component.html","webpack:///./src/app/pages/intro/pages/intro/intro.component.scss","webpack:///./src/app/pages/intro/pages/intro/intro.component.ts"],"names":[],"mappings":"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","file":"pages-intro-intro-module.js","sourcesContent":["module.exports = \"<div class=\\\"flexcontainer\\\">\\r\\n  <div class=\\\"flexbox centered\\\" *ngFor=\\\"let action of featureActions\\\" (mouseenter)=\\\"onHoverContainer(true, action)\\\"\\r\\n       (mouseleave)=\\\"onHoverContainer(false, action)\\\">\\r\\n    <app-suggested-action-button\\r\\n      [backgroundColor]=\\\"action.backgroundColor\\\"\\r\\n      [iconColor]=\\\"action.iconColor\\\"\\r\\n      [icon]=\\\"action.icon\\\"\\r\\n      [label]=\\\"action.label\\\"\\r\\n      (buttonClickedEmitter)=\\\"onFeatureToggled(action)\\\">\\r\\n    </app-suggested-action-button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".flexcontainer {\\n  display: flex; }\\n\\n.flexbox {\\n  flex-grow: 1; }\\n\\n.centered {\\n  text-align: center; }\\n\\n::ng-deep .typeSelect div.mat-select-arrow-wrapper {\\n  display: none; }\\n\\n::ng-deep .typeSelect.mat-select {\\n  display: inline;\\n  width: 1px; }\\n\"","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {FeatureType} from '../../../../core/settings/model/feature-type.enum';\r\nimport {SettingType} from '../../../../core/settings/model/setting-type.enum';\r\nimport {ColorService} from '../../../../core/ui/services/color.service';\r\nimport {FeatureService} from '../../../../core/settings/services/feature.service';\r\nimport {SettingsService} from '../../../../core/settings/services/settings.service';\r\nimport {Setting} from '../../../../core/settings/model/setting.model';\r\n\r\n/**\r\n * Represents a feature action button\r\n */\r\nclass FeatureAction {\r\n  /** Feature type */\r\n  featureType: FeatureType;\r\n  /** Setting type */\r\n  settingType: SettingType;\r\n  /** Active **/\r\n  active = false;\r\n  /** Label to be displayed */\r\n  label: string;\r\n  /** Icon to be used */\r\n  icon: string;\r\n  /** Background color to be used */\r\n  backgroundColor: string;\r\n  /** Background color to be used */\r\n  iconColor: string;\r\n}\r\n\r\n/**\r\n * Displays feature fragment\r\n */\r\n@Component({\r\n  selector: 'app-feature-fragment',\r\n  templateUrl: './feature-fragment.component.html',\r\n  styleUrls: ['./feature-fragment.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeatureFragmentComponent implements OnInit, OnChanges {\r\n\r\n  /** Map of current settings */\r\n  @Input() settings = new Map<String, Setting>();\r\n  /** Event emitter indicating tasklet type selection */\r\n  @Output() featureToggledEmitter = new EventEmitter<{ setting: SettingType, value: any }>();\r\n\r\n  /** List of tasklet type actions */\r\n  featureActions = [];\r\n  /** Currently hovered feature */\r\n  hoveredFeature: FeatureType;\r\n\r\n  /**\r\n   * Constructor\r\n   * @param colorService color service\r\n   * @param featureService feature service\r\n   * @param settingsService settings service\r\n   */\r\n  constructor(private colorService: ColorService,\r\n              private featureService: FeatureService,\r\n              private settingsService: SettingsService) {\r\n  }\r\n\r\n  //\r\n  // Lifecycle hooks\r\n  //\r\n\r\n  /**\r\n   * Handles on-init lifecycle phase\r\n   */\r\n  ngOnInit() {\r\n    this.initializeFeatures();\r\n  }\r\n\r\n  /**\r\n   * Handles on-changes lifecycle phase\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.updateActionActive();\r\n    this.updateActionColor();\r\n  }\r\n\r\n  //\r\n  // Initialization\r\n  //\r\n\r\n  /**\r\n   * Initializes tasklet types\r\n   */\r\n  initializeFeatures() {\r\n    this.featureActions = [];\r\n    if (this.featureService.features != null) {\r\n      this.featureService.features.forEach(feature => {\r\n        const action = new FeatureAction();\r\n        action.featureType = feature.type;\r\n        action.settingType = feature.settingType;\r\n        action.backgroundColor = this.getFeatureColor(action.featureType, action.active);\r\n        action.iconColor = this.getFeatureContrast(action.featureType, action.active);\r\n        action.icon = feature.icon;\r\n        action.label = feature.type.toString();\r\n        this.featureActions.push(action);\r\n      });\r\n    }\r\n  }\r\n\r\n  //\r\n  // Actions\r\n  //\r\n\r\n  /**\r\n   * Handles selection of a feature\r\n   * @param action feature action\r\n   */\r\n  onFeatureToggled(action: FeatureAction) {\r\n    this.settingsService.updateSetting(new Setting(action.settingType, !action.active));\r\n  }\r\n\r\n  /**\r\n   * Handles hover over container\r\n   * @param {boolean} hovered whether there is currently a hover event\r\n   * @param {TaskletTypeGroupAction} action tasklet type group action\r\n   */\r\n  onHoverContainer(hovered: boolean, action: FeatureAction) {\r\n    this.hoveredFeature = hovered ? action.featureType : null;\r\n    this.updateActionColor();\r\n  }\r\n\r\n  //\r\n  // Helpers\r\n  //\r\n\r\n  /**\r\n   * Updates active status\r\n   */\r\n  private updateActionActive() {\r\n    this.featureActions.forEach((action: FeatureAction) => {\r\n      const setting = this.settingsService.settings.get(action.settingType);\r\n      action.active = setting != null && JSON.parse(setting.value) === true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates colors\r\n   */\r\n  private updateActionColor() {\r\n    this.featureActions.forEach((action: FeatureAction) => {\r\n      action.backgroundColor = this.getFeatureColor(action.featureType, action.active);\r\n      action.iconColor = this.getFeatureContrast(action.featureType, action.active);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Retrieves a color by feature and current settingType\r\n   * @param feature feature\r\n   * @param active active\r\n   */\r\n  private getFeatureColor(feature: FeatureType, active: boolean): string {\r\n    if (active || this.hoveredFeature === feature) {\r\n      return this.colorService.getFeatureTypeColor(feature).color;\r\n    } else {\r\n      return this.colorService.getFeatureTypeColor(null).color;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieves a contrast by feature and current settingType\r\n   * @param feature feature\r\n   * @param active active\r\n   */\r\n  private getFeatureContrast(feature: FeatureType, active: boolean): string {\r\n    if (active || this.hoveredFeature === feature) {\r\n      return this.colorService.getFeatureTypeColor(feature).contrast;\r\n    } else {\r\n      return this.colorService.getFeatureTypeColor(null).contrast;\r\n    }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {IntroComponent} from './pages/intro/intro.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: IntroComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class IntroRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {IntroComponent} from './pages/intro/intro.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MaterialModule} from '../../ui/material/material.module';\r\nimport {IntroRoutingModule} from './intro-routing.module';\r\nimport {FeatureFragmentComponent} from './components/feature-fragment/feature-fragment.component';\r\nimport {SuggestedActionButtonModule} from '../../ui/suggested-action-button/suggested-action-button.module';\r\nimport {NewFeaturesDialogModule} from '../../ui/new-features-dialog/new-features-dialog.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n\r\n    IntroRoutingModule,\r\n\r\n    NewFeaturesDialogModule,\r\n    SuggestedActionButtonModule\r\n  ],\r\n  declarations: [\r\n    IntroComponent,\r\n    FeatureFragmentComponent\r\n  ]\r\n})\r\nexport class IntroModule {\r\n}\r\n","module.exports = \"<div class=\\\"main\\\">\\r\\n  <div class=\\\"content\\\">\\r\\n    <div class=\\\"header\\\">\\r\\n      <div class=\\\"title\\\">{{ title }}</div>\\r\\n      <div class=\\\"description\\\">{{ description }}</div>\\r\\n    </div>\\r\\n    <app-feature-fragment [settings]=\\\"settings\\\"></app-feature-fragment>\\r\\n    <div class=\\\"footer flexcontainer\\\">\\r\\n      <div class=\\\"flexbox\\\"></div>\\r\\n      <button mat-button (click)=\\\"onContinue()\\\">\\r\\n        Continue\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".flexcontainer {\\n  display: flex; }\\n\\n.flexbox {\\n  flex-grow: 1; }\\n\\n/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n\\n/* Theme for the ripple elements.*/\\n\\n/* stylelint-disable material/no-prefixes */\\n\\n/* stylelint-enable */\\n\\n/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n\\n/* Theme for the ripple elements.*/\\n\\n/* stylelint-disable material/no-prefixes */\\n\\n/* stylelint-enable */\\n\\n.main {\\n  height: 100%; }\\n\\n@media screen and (max-width: 960px) {\\n  .content {\\n    margin: 10px auto;\\n    padding: 10px;\\n    width: 100%;\\n    /* Safari/Chrome, other WebKit */\\n    /* Firefox, other Gecko */\\n    box-sizing: border-box;\\n    /* Opera/IE 8+ */ } }\\n\\n@media screen and (min-width: 960px) and (max-width: 1280px) {\\n  .content {\\n    padding: 20px;\\n    margin: 50px auto;\\n    width: 450px; } }\\n\\n@media screen and (min-width: 1280px) {\\n  .content {\\n    margin: 65px auto;\\n    width: 450px; } }\\n\\n@media screen and (max-width: 960px) {\\n  .header {\\n    margin-bottom: 10px; } }\\n\\n@media screen and (min-width: 960px) and (max-width: 1280px) {\\n  .header {\\n    margin-bottom: 20px; } }\\n\\n@media screen and (min-width: 1280px) {\\n  .header {\\n    margin-bottom: 65px; } }\\n\\n.title {\\n  font-family: 'Roboto Slab', serif;\\n  font-weight: 700;\\n  font-size: 1.8em; }\\n\\n@media screen and (max-width: 960px) {\\n  .footer {\\n    margin-top: 10px; } }\\n\\n@media screen and (min-width: 960px) and (max-width: 1280px) {\\n  .footer {\\n    margin-top: 20px; } }\\n\\n@media screen and (min-width: 1280px) {\\n  .footer {\\n    margin-top: 65px; } }\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {SettingType} from '../../../../core/settings/model/setting-type.enum';\r\nimport {Setting} from '../../../../core/settings/model/setting.model';\r\nimport {SettingsService} from '../../../../core/settings/services/settings.service';\r\nimport {environment} from '../../../../../environments/environment';\r\nimport {NewFeaturesDialogComponent} from '../../../../ui/new-features-dialog/new-features-dialog/new-features-dialog.component';\r\nimport {GitTag} from '../../../../core/settings/model/git-tag.model';\r\nimport {MatDialog, MatIconRegistry} from '@angular/material';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {Media} from '../../../../core/ui/model/media.enum';\r\nimport {MediaService} from '../../../../core/ui/services/media.service';\r\nimport {MaterialColorService} from '../../../../core/ui/services/material-color.service';\r\nimport {MaterialIconService} from '../../../../core/ui/services/material-icon.service';\r\nimport {Subject} from 'rxjs';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {Router} from '@angular/router';\r\nimport {FeatureService} from '../../../../core/settings/services/feature.service';\r\n\r\n/**\r\n * Displays an intro page\r\n */\r\n@Component({\r\n  selector: 'app-intro',\r\n  templateUrl: './intro.component.html',\r\n  styleUrls: ['./intro.component.scss']\r\n})\r\nexport class IntroComponent implements OnInit, OnDestroy {\r\n\r\n  /** Title to be displayed */\r\n  title = 'How do you work?';\r\n  /** Description to be displayed */\r\n  description = 'Select the aspects you want to use (you can change this later)';\r\n\r\n  /** Helper subject used to finish other subscriptions */\r\n  private unsubscribeSubject = new Subject();\r\n\r\n  /** Enum of media types */\r\n  public mediaType = Media;\r\n  /** Current media */\r\n  public media: Media = Media.UNDEFINED;\r\n\r\n  /** Map of current settings */\r\n  settings = new Map<String, Setting>();\r\n\r\n  /**\r\n   * Constructor\r\n   * @param featureService feature service\r\n   * @param mediaService media service\r\n   * @param materialColorService material color service\r\n   * @param materialIconService material icon service\r\n   * @param settingsService settings service\r\n   * @param router router\r\n   * @param dialog dialog\r\n   * @param iconRegistry icon registry\r\n   * @param sanitizer dom sanitizer\r\n   */\r\n  constructor(private featureService: FeatureService,\r\n              private mediaService: MediaService,\r\n              private materialColorService: MaterialColorService,\r\n              private materialIconService: MaterialIconService,\r\n              private settingsService: SettingsService,\r\n              private router: Router,\r\n              public dialog: MatDialog,\r\n              private iconRegistry: MatIconRegistry,\r\n              private sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  //\r\n  // Initialization\r\n  //\r\n\r\n  /**\r\n   * Handles on-init lifecycle phase\r\n   */\r\n  ngOnInit() {\r\n    this.initializeSettings();\r\n    this.initializeSemaphore();\r\n    this.initializeMaterial();\r\n    this.initializeMediaSubscription();\r\n  }\r\n\r\n  /**\r\n   * Handles on-destroy lifecycle phase\r\n   */\r\n  ngOnDestroy() {\r\n    this.unsubscribeSubject.next();\r\n    this.unsubscribeSubject.complete();\r\n  }\r\n\r\n  //\r\n  // Initialization\r\n  //\r\n\r\n  /**\r\n   * Initializes an unset settingType\r\n   * @param settings settingType\r\n   * @param value value\r\n   */\r\n  private initializeSetting(settings: SettingType, value: any) {\r\n    if (this.settingsService.settings.get(settings) == null) {\r\n      const setting = new Setting(settings, value);\r\n      this.settingsService.updateSetting(setting);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes semaphore\r\n   */\r\n  private initializeSemaphore() {\r\n    // Activate semaphore\r\n    this.settingsService.updateSetting(new Setting(SettingType.SEMAPHORE_FEATURE, true));\r\n  }\r\n\r\n  /**\r\n   * Initializes settings\r\n   */\r\n  private initializeSettings() {\r\n    this.settingsService.fetch();\r\n    this.settingsService.settingsSubject.subscribe(value => {\r\n      if (value != null) {\r\n        this.settings = new Map(value);\r\n\r\n        // Initialize version setting\r\n        if (this.settings.get(SettingType.VERSION) != null) {\r\n          this.showNewFeatures(this.settings.get(SettingType.VERSION).value);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles display of new features dialog\r\n   * @param {string} currentVersion\r\n   */\r\n  private showNewFeatures(currentVersion: string) {\r\n    // Current version\r\n    const currentMajor = Number.parseInt(environment.VERSION.split('.')[0]);\r\n    const currentMinor = Number.parseInt(environment.VERSION.split('.')[1]);\r\n    const currentPatch = Number.parseInt(environment.VERSION.split('.')[2]);\r\n\r\n    // Latest version\r\n    const latestMajor = Number.parseInt(currentVersion.split('.')[0]);\r\n    const latestMinor = Number.parseInt(currentVersion.split('.')[1]);\r\n    const latestPatch = Number.parseInt(currentVersion.split('.')[2]);\r\n\r\n    if ((currentMajor > latestMajor)\r\n      || (currentMajor === latestMajor && currentMinor > latestMinor)\r\n      || (currentMajor === latestMajor && currentMinor === latestMinor && currentPatch > latestPatch)) {\r\n      const dialogRef = this.dialog.open(NewFeaturesDialogComponent, {\r\n        disableClose: false,\r\n        data: {\r\n          dialogTitle: 'New features',\r\n          gitTags: (environment.TAGS as GitTag[]).filter(gt => {\r\n            gt.annotation = gt.annotation.replace(/.*v/g, '');\r\n\r\n            // Tag version\r\n            const tagMajor = Number.parseInt(gt.annotation.split('.')[0]);\r\n            const tagMinor = Number.parseInt(gt.annotation.split('.')[1]);\r\n            const tagPatch = Number.parseInt(gt.annotation.split('.')[2]);\r\n\r\n            const relevant = ((tagMajor > latestMajor)\r\n              || (tagMajor === latestMajor && tagMinor > latestMinor)\r\n              || (tagMajor === latestMajor && tagMinor === latestMinor && tagPatch > latestPatch)\r\n            );\r\n\r\n            console.log(`tag version ${gt.annotation}, relevant: ${relevant}`);\r\n\r\n            return relevant;\r\n          })\r\n        }\r\n      });\r\n      dialogRef.afterClosed().subscribe(() => {\r\n        // Save latest version\r\n        this.settingsService.updateSetting(new Setting(SettingType.VERSION, environment.VERSION));\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes material colors and icons\r\n   */\r\n  private initializeMaterial() {\r\n    this.materialColorService.initializeColors();\r\n    this.materialIconService.initializeIcons(this.iconRegistry, this.sanitizer);\r\n  }\r\n\r\n  /**\r\n   * Initializes media subscription\r\n   */\r\n  private initializeMediaSubscription() {\r\n    this.media = this.mediaService.media;\r\n    this.mediaService.mediaSubject.pipe(\r\n      takeUntil(this.unsubscribeSubject)\r\n    ).subscribe((value) => {\r\n      this.media = value as Media;\r\n    });\r\n  }\r\n\r\n  //\r\n  // Actions\r\n  //\r\n\r\n  /**\r\n   * Handles click on continue button\r\n   */\r\n  onContinue() {\r\n    // Set default values\r\n    this.initializeSetting(SettingType.DEVELOPMENT, false);\r\n    this.initializeSetting(SettingType.SCRUM, false);\r\n    this.initializeSetting(SettingType.POMODORO, false);\r\n    this.initializeSetting(SettingType.POMODORO_DURATION, 5);\r\n    this.initializeSetting(SettingType.POMODORO_BREAK, 5);\r\n\r\n    // Deactivate semaphore\r\n    this.settingsService.updateSetting(new Setting(SettingType.SEMAPHORE_FEATURE, false));\r\n\r\n    this.router.navigate([`/timeline`]).then(() => {\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}